rdb 持久化

* 核心函数 rdbLoad
** debugCommand
debug的reload命令
先保存，然后清空，然后加载

** readSyncBulkPayload
*** todo syncWithMaster

** loadDataFromDisk
启动的时候，如果没有开启AOF，就load文件

* 核心函数 rdbSave
** flushallCommand
flushall命令  
清空数据库，如果需要的话，建立一个保存点(清空之后)

** debugCommand
debug的reload命令
先保存，然后清空，然后加载

** rdbSaveBackground
*** bgsave命令
*** startBgsaveForReplication
*** 定时器里面检查保存点的设置什么的

** saveCommand
save命令

** prepareForShutdown
服务器关闭/重启的时候，如果没有特别的设置不保存，就保存一下数据
*** todo
            /* If we have AOF enabled but haven't written the AOF yet, don't
             * shutdown or else the dataset will be lost. */
            if (server.aof_state == AOF_WAIT_REWRITE) {
                serverLog(LL_WARNING, "Writing initial AOF, can't exit.");
                return C_ERR;
            }

** dirty
    long long dirty;                /* Changes to DB from the last save */
    long long dirty_before_bgsave;  /* Used to restore dirty on failed BGSAVE */
计算修改的字段数量，主要用来计算保存点以及AOF要不要做保存

* 核心函数 
** rewriteAppendOnlyFile  
生成全量AOF文件

** feedAppendOnlyFile 
有修改操作的时候，这个函数把指令写入server.aof_buf

** aofRewriteBufferAppend 
如果有修改操作的时候，正在修改AOF文件，那么内容先不写入server.aof_buf, 而是先另外保存

** bioProcessBackgroundJobs
bio线程

** flushAppendOnlyFile 
每次修改，把指令写入server.aof_buf(feedAppendOnlyFile), 这个函数把server.aof_buf的内容写入aof文件

** startAppendOnly 
运行中开启AOF，会重新生成全量AOF文件

* todo loadaof loadAppendOnlyFile
