* discreteNarrowPhase
processCms 函数中，从 mCmArray 中取出数据一次调用 discreteNarrowPhase
在 PxsNphaseImplementationContext::processContactManager 中创建 PxsCMDiscreteUpdateTask，输入mNarrowPhasePairs.mContactManagerMapping 赋值给 mCmArray

** g_PCMContactMethodTable
定义了各类型得碰撞检测函数
#+begin_src C++
const PxcContactMethod conMethod = g_PCMContactMethodTable[type0][type1];
conMethod(shape0->geometry, shape1->geometry, *tm0, *tm1, context.mNarrowPhaseParams, cache, context.mContactBuffer, &context.mRenderOutput);  
#+end_src

* PxsNphaseImplementationContext::processContactManager
如上，创建 PxsCMDiscreteUpdateTask

* PxsNphaseImplementationContext::appendContactManagers
把 mNewNarrowPhasePairs 的数据添加到 mNarrowPhasePairs

* PxsNphaseImplementationContext::registerContactManager
mNewNarrowPhasePairs.mContactManagerMapping.pushBack(cm);

* Sc::Scene::registerContactManagers
从 mPreallocatedContactManagers 里面取出数据, 调用 registerContactManager

* Sc::Scene::preallocateContactManagers
把pair分组建立task(OnOverlapCreatedTask), 并且调用 processBatch 来驱动

continue: physx::Sc::Scene::postBroadPhaseStage2
task:  OnOverlapCreatedTask

** createRbElementInteraction
OnOverlapCreatedTask 调用 createRbElementInteraction 检查是否碰撞
*** Sc::NPhaseCore::createShapeInteraction

** mOverlapFilterTaskHead
在 Scene::finishBroadPhase 中设置，在中取出，设置到 mPreallocatedContactManagers


* Sc::Scene::advanceStep

