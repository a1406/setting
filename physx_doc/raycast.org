* raycast
#+begin_src C++
raycast_box(const physx::PxGeometry & geom, const physx::PxTransform & pose, const physx::PxVec3 & rayOrigin, const physx::PxVec3 & rayDir, float maxDist, physx::PxFlags<enum physx::PxHitFlag::Enum,unsigned short> hitFlags, unsigned int maxHits, physx::PxRaycastHit * hits) 行 48	C++
GeomQueryAny<physx::PxRaycastHit>::geomHit(const physx::NpSceneQueries & sceneQueries, const physx::MultiQueryInput & input, const physx::Gu::ShapeData & sd, const physx::PxGeometry & sceneGeom, const physx::PxTransform & pose, physx::PxFlags<enum physx::PxHitFlag::Enum,unsigned short> hitFlags, unsigned int maxHits, physx::PxRaycastHit * hits, const float shrunkMaxDistance, physx::PxBounds3 * precomputedBounds) 行 217	C++
MultiQueryCallback<physx::PxRaycastHit>::invoke(float & aDist, const physx::Sq::PrunerPayload & aPayload) 行 441	C++
physx::Gu::doLeafTest<0,physx::Sq::AABBTree,physx::Sq::AABBTreeRuntimeNode,physx::Sq::PrunerPayload,physx::Sq::PrunerCallback>(const physx::Sq::AABBTreeRuntimeNode * node, physx::Gu::RayAABBTest & test, float & md, float oldMaxDist, const physx::Sq::PrunerPayload * objects, const physx::PxBounds3 * boxes, const physx::Sq::AABBTree & tree, float & maxDist, physx::Sq::PrunerCallback & pcb) 行 150	C++
physx::Gu::AABBTreeRaycast<0,physx::Sq::AABBTree,physx::Sq::AABBTreeRuntimeNode,physx::Sq::PrunerPayload,physx::Sq::PrunerCallback>::operator()(const physx::Sq::PrunerPayload * objects, const physx::PxBounds3 * boxes, const physx::Sq::AABBTree & tree, const physx::PxVec3 & origin, const physx::PxVec3 & unitDir, float & maxDist, const physx::PxVec3 & inflation, physx::Sq::PrunerCallback & pcb) 行 225	C++
physx::Sq::AABBPruner::raycast(const physx::PxVec3 & origin, const physx::PxVec3 & unitDir, float & inOutDistance, physx::Sq::PrunerCallback & pcb) 行 350	C++
physx::NpSceneQueries::multiQuery<physx::PxRaycastHit>(const physx::MultiQueryInput & input, physx::PxHitCallback<physx::PxRaycastHit> & hits, physx::PxFlags<enum physx::PxHitFlag::Enum,unsigned short> hitFlags, const physx::PxQueryCache * cache, const physx::PxQueryFilterData & filterData, physx::PxQueryFilterCallback * filterCall, physx::BatchQueryFilterData * bfd) 行 780	C++
physx::NpSceneQueries::raycast(const physx::PxVec3 & origin, const physx::PxVec3 & unitDir, const float distance, physx::PxHitCallback<physx::PxRaycastHit> & hits, physx::PxFlags<enum physx::PxHitFlag::Enum,unsigned short> hitFlags, const physx::PxQueryFilterData & filterData, physx::PxQueryFilterCallback * filterCall, const physx::PxQueryCache * cache) 行 92	C++
CCDRaycast(physx::PxScene * scene, physx::PxRigidActor * actor, physx::PxShape * shape, const physx::PxVec3 & origin, const physx::PxVec3 & unitDir, const float distance, physx::PxRaycastHit & hit, bool dyna_dyna) 行 192	C++
#+end_src

* AABBPruner::fullRebuildAABBTree
#+begin_src C++
Gu::buildAABBTree(physx::Gu::AABBTreeBuildParams & params, physx::Gu::NodeAllocator & nodeAllocator, physx::Gu::BuildStats & stats, unsigned int * & indices) 行 299	C++
Sq::AABBTree::build(physx::Gu::AABBTreeBuildParams & params) 行 227	C++
Sq::AABBPruner::fullRebuildAABBTree() 行 756	C++
Sq::AABBPruner::commit() 行 404	C++
Sq::SceneQueryManager::afterSync(physx::PxSceneQueryUpdateMode::Enum updateMode) 行 415	C++
NpScene::fetchResultsPostContactCallbacks() 行 2119	C++
NpScene::fetchResults(bool block, unsigned int * errorState) 行 2195	C++
stepPhysics(bool __formal) 行 145	C++
#+end_src

* class PruningPool
handle要重用，中间有空隙。index是连续得
#+begin_src C++
PxU32				mNbObjects;			//!< Current number of objects
PxU32				mMaxNbObjects;		//!< Max. number of objects (capacity for mWorldBoxes, mObjects)

//!< these arrays are parallel
PxBounds3*			mWorldBoxes;		//!< List of world boxes, stores mNbObjects, capacity=mMaxNbObjects
PrunerPayload*			mObjects;			//!< List of objects, stores mNbObjects, capacity=mMaxNbObjects
//	private:			
PoolIndex*			mHandleToIndex;		//!< Maps from PrunerHandle to internal index (payload index in mObjects)
PrunerHandle*			mIndexToHandle;		//!< Inverse map from objectIndex to PrunerHandle

// this is the head of a list of holes formed in mHandleToIndex
// by removed handles
// the rest of the list is stored in holes in mHandleToIndex (in place)
PrunerHandle			mFirstRecycledHandle;
#+end_src



* AABBPruner
| 变量名         | 类型                    | 描述                                                                           |
| mRuntimePool   | Sq::AABBTree*           | 里面放当前已经排序好得数据，用来查询                                           |
| mNodeAllocator | Gu::AABBTreeBuildParams | 正在进行排序得数据，排序完成后，在AABBTree::buildEnd函数里面拷贝到mRuntimePool |
| mBuilder       | Gu::BuildStats          | 里面放将要进行排序得数据,数据来自于mPool                                       |
| mPool          | PruningPool             |                                                                                |

** AABBPruner::prepareBuild
#+begin_src C++
mBuilder.reset();
mBuilder.mNbPrimitives	= mNbCachedBoxes;
mBuilder.mAABBArray		= mCachedBoxes;
mBuilder.mLimit			= NB_OBJECTS_PER_NODE;
#+end_src


** Sq::AABBTree* mAABBTree
*** class PxBounds3
AABB 包围盒相关操作

*** class BitArray
位运算，支持任意长度得位操作

*** class AABBTreeRuntimeNode
#+begin_src C++
PxBounds3	mBV;	// Global bounding-volume enclosing all the node-related primitives
PxU32		mData;	// 27 bits node or prim index|4 bits #prims|1 bit leaf
#+end_src
mData 0位表示是否是叶子节点，1-4位表示primitives，1-31位表示pos_index

*** class AABBTreeMergeData
#+begin_src C++
PxU32				mNbNodes;		//!< Number of nodes of AABB tree merge
const AABBTreeRuntimeNode*	mNodes;	//!< Nodes of AABB tree merge

PxU32				mNbIndices;		//!< Number of indices of AABB tree merge
const PxU32*			mIndices;		//!< Indices of AABB tree merge

PxU32				mIndicesOffset;	//!< Indices offset from pruning pool
#+end_src


*** class AABBTree
#+begin_src C++
PxU32*				mIndices;			//!< Indices in the app list. Indices are reorganized during build (permutation).
PxU32				mNbIndices;			//!< Nb indices
AABBTreeRuntimeNode*		mRuntimePool;		//!< Linear pool of nodes.
Gu::NodeAllocator		mNodeAllocator;
PxU32*				mParentIndices;		//!< PT: hot/cold split, keep parent data in separate array
// Stats
PxU32				mTotalNbNodes;		//!< Number of nodes in the tree.
PxU32				mTotalPrims;		//!< Copy of final BuildStats::mTotalPrims

// Progressive building
FIFOStack*			mStack;
BitArray			mRefitBitmask; //!< bit is set for each node index in markForRefit
PxU32				mRefitHighestSetWord;
#+end_src

*** PruningPool	mPool;
#+begin_src C++
PxU32				mNbObjects;			//!< Current number of objects
PxU32				mMaxNbObjects;		//!< Max. number of objects (capacity for mWorldBoxes, mObjects)
//!< these arrays are parallel
PxBounds3*			mWorldBoxes;		//!< List of world boxes, stores mNbObjects, capacity=mMaxNbObjects
PrunerPayload*			mObjects;			//!< List of objects, stores mNbObjects, capacity=mMaxNbObjects

PoolIndex*			mHandleToIndex;		//!< Maps from PrunerHandle to internal index (payload index in mObjects)
PrunerHandle*			mIndexToHandle;		//!< Inverse map from objectIndex to PrunerHandle

// this is the head of a list of holes formed in mHandleToIndex
// by removed handles
// the rest of the list is stored in holes in mHandleToIndex (in place)
PrunerHandle			mFirstRecycledHandle;  
#+end_src

**** 添加object
#+begin_src C++
physx::Sq::PruningPool::addObjects(unsigned int * results, const physx::PxBounds3 * bounds, const physx::Sq::PrunerPayload * payload, unsigned int count) 行 119	C++
physx::Sq::AABBPruner::addObjects(unsigned int * results, const physx::PxBounds3 * bounds, const physx::Sq::PrunerPayload * payload, unsigned int count, bool hasPruningStructure) 行 107	C++
physx::Sq::SceneQueryManager::addPrunerShape(const physx::Scb::Shape & scbShape, const physx::Scb::Actor & scbActor, bool dynamic, unsigned int compoundId, const physx::PxBounds3 * bounds, bool hasPrunerStructure) 行 334	C++
physx::NpShapeManager::addPrunerShape(physx::Sq::SceneQueryManager & sqManager, unsigned int index, const physx::NpShape & shape, const physx::PxRigidActor & actor, bool dynamic, const physx::PxBounds3 * bound, bool hasPrunerStructure) 行 385	C++
physx::NpShapeManager::setupAllSceneQuery(physx::NpScene * scene, const physx::PxRigidActor & actor, bool hasPrunerStructure, const physx::PxBounds3 * bounds, const physx::Gu::BVHStructure * bvhStructure) 行 276	C++
addActorT<physx::NpRigidStatic,physx::Scb::RigidStatic>(physx::NpRigidStatic & actor, physx::Scb::RigidStatic & scbActor, physx::shdfnd::Array<physx::PxRigidActor *,physx::shdfnd::ReflectionAllocator<physx::PxRigidActor *>> & actors, physx::NpScene * scene, const physx::Gu::BVHStructure * bvhStructure, bool hasPrunerStructure) 行 751	C++
physx::NpScene::addRigidStatic(physx::NpRigidStatic & actor, const physx::Gu::BVHStructure * bvhStructure, bool hasPrunerStructure) 行 759	C++
physx::NpScene::addActorInternal(physx::PxActor & actor, const physx::PxBVHStructure * bvhStructure) 行 386	C++
physx::NpScene::addActor(physx::PxActor & actor, const physx::PxBVHStructure * bvhStructure) 行 358	C++
#+end_src
