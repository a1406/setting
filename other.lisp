(require 'gdb-mi)
(defun gamesrv-gdb ()
  (interactive)
  (let* ((srv_pid
    (with-temp-buffer
      (insert-file-contents "game_srv/pid.txt")
      (buffer-string)))
	 (cmd1 (gud-val 'command-name 'gdb))
	 (cmd2 (format "%s game_srv/game_srv -p %s" cmd1 srv_pid))
	 )
;;    (setq gud-gdb-history (list cmd2))
    (gdb cmd2)
    )
  )


(defun my_find-cscope-files ()
(let ((i 0)
      (pre "")
      (bfind nil)
      )
  (while (< i 10)
    (if (file-exists-p (format "%scscope.files" pre))
        (and (+ i 10)
             (setq bfind t))
      (setq pre (format "../%s" pre))
      )
    (setq i (+ i 1)))
;;  (message "bfind = %s pre = %s" bfind pre)
  (if bfind
      (format "%s/%s" default-directory pre)
    "")
  )
)
